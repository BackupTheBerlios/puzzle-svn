//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace NTorpedo.Client.AuctionWebService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuctionServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public class AuctionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public AuctionService() {
            this.Url = "http://localhost/NTorpedo/AuctionService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PlaceBid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBid(string auctionId, string bidId, string userId, System.Double amount, System.Double maxAmount) {
            object[] results = this.Invoke("PlaceBid", new object[] {
                        auctionId,
                        bidId,
                        userId,
                        amount,
                        maxAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPlaceBid(string auctionId, string bidId, string userId, System.Double amount, System.Double maxAmount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PlaceBid", new object[] {
                        auctionId,
                        bidId,
                        userId,
                        amount,
                        maxAmount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPlaceBid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Place2Bids", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Place2Bids(string auctionId1, string auctionId2, string bidId1, string bidId2, string userId, System.Double amount1, System.Double amount2, System.Double maxAmount1, System.Double maxAmount2) {
            object[] results = this.Invoke("Place2Bids", new object[] {
                        auctionId1,
                        auctionId2,
                        bidId1,
                        bidId2,
                        userId,
                        amount1,
                        amount2,
                        maxAmount1,
                        maxAmount2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPlace2Bids(string auctionId1, string auctionId2, string bidId1, string bidId2, string userId, System.Double amount1, System.Double amount2, System.Double maxAmount1, System.Double maxAmount2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Place2Bids", new object[] {
                        auctionId1,
                        auctionId2,
                        bidId1,
                        bidId2,
                        userId,
                        amount1,
                        amount2,
                        maxAmount1,
                        maxAmount2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPlace2Bids(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAuction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuctionInfo ListAuction(string auctionId) {
            object[] results = this.Invoke("ListAuction", new object[] {
                        auctionId});
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListAuction(string auctionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListAuction", new object[] {
                        auctionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuctionInfo EndListAuction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAuctionTwiceWithTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuctionInfo ListAuctionTwiceWithTransaction(string auctionId) {
            object[] results = this.Invoke("ListAuctionTwiceWithTransaction", new object[] {
                        auctionId});
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListAuctionTwiceWithTransaction(string auctionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListAuctionTwiceWithTransaction", new object[] {
                        auctionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuctionInfo EndListAuctionTwiceWithTransaction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAuctionTwiceWithoutTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuctionInfo ListAuctionTwiceWithoutTransaction(string auctionId) {
            object[] results = this.Invoke("ListAuctionTwiceWithoutTransaction", new object[] {
                        auctionId});
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListAuctionTwiceWithoutTransaction(string auctionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListAuctionTwiceWithoutTransaction", new object[] {
                        auctionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuctionInfo EndListAuctionTwiceWithoutTransaction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listPartialAuction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuctionInfo listPartialAuction(string auctionId) {
            object[] results = this.Invoke("listPartialAuction", new object[] {
                        auctionId});
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlistPartialAuction(string auctionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("listPartialAuction", new object[] {
                        auctionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuctionInfo EndlistPartialAuction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuctionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindAllAuctions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CollectionWithSQL FindAllAuctions() {
            object[] results = this.Invoke("FindAllAuctions", new object[0]);
            return ((CollectionWithSQL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindAllAuctions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindAllAuctions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public CollectionWithSQL EndFindAllAuctions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CollectionWithSQL)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindHighBids", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CollectionWithSQL FindHighBids(string auctionId) {
            object[] results = this.Invoke("FindHighBids", new object[] {
                        auctionId});
            return ((CollectionWithSQL)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindHighBids(string auctionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindHighBids", new object[] {
                        auctionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public CollectionWithSQL EndFindHighBids(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CollectionWithSQL)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class AuctionInfo {
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public System.Double LowPrice;
        
        /// <remarks/>
        public BidInfo[] Bids;
        
        /// <remarks/>
        public string SellerName;
        
        /// <remarks/>
        public string ItemName;
        
        /// <remarks/>
        public string ItemGraphicFilename;
        
        /// <remarks/>
        public string ItemID;
        
        /// <remarks/>
        public string AuctionID;
        
        /// <remarks/>
        public string Sql;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class BidInfo {
        
        /// <remarks/>
        public System.Double BidAmount;
        
        /// <remarks/>
        public string Buyer;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class CollectionWithSQL {
        
        /// <remarks/>
        public object[] TheCollection;
        
        /// <remarks/>
        public string TheSql;
    }
}
